name: Build - API Cart

on:
  push:
    branches: [ main ]
    paths:
      - 'api-cart/**'
      - '.github/workflows/backend-cart.yml'
      - 'k8s/api-cart/*'
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: false
        default: 'development'

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven Wrapper
        run: |
          cd api-cart  # Change to the submodule directory where pom.xml and mvnw reside
          chmod +x ./mvnw  # Make the Maven Wrapper executable
          ./mvnw clean install

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ahmentz/tcc-backend
          flavor: |
            prefix=api-cart-
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./api-cart
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-gke:
    runs-on: ubuntu-latest
    needs: build-test-push
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
          project_id: tcc-cluster-k8s
          install_components: 'gke-gcloud-auth-plugin'

      - name: Configure kubectl with gcloud auth
        run: |
          echo "${{ secrets.GCP_CREDENTIALS }}" | base64 --decode > /tmp/gcp-credentials.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-credentials.json
          gcloud container clusters get-credentials cluster-tcc-1 --zone southamerica-east1 --project tcc-cluster-k8s

      - name: Deploy to GKE
        run: |
            kubectl apply -f ./.k8s/api-cart/deployment.yml
            kubectl apply -f ./.k8s/api-cart/service.yml
            kubectl apply -f ./.k8s/api-cart/ingress.yml

      - name: Verify Deployment
        run: kubectl rollout status deployment/tcc-api-cart-backend --timeout=120s

      - name: Get Service URL (for testing)
        run: kubectl get svc api-cart-backend-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
