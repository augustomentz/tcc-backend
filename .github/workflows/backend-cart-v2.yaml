name: Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Aciona em tags semânticas para releases
  pull_request:
    branches:
      - main  # Valida em PRs sem pushar

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          
      - name: Change to api-cart directory
        run: cd api-cart

      - name: Build and Test with Maven
        run: mvn clean verify -DskipTests

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'  # Apenas em pushes
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository_owner }}/tcc-backend
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max  # Cache Docker layers para eficiência

      - name: Scan image for vulnerabilities (Trivy)
        if: github.event_name != 'pull_request'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ steps.meta.outputs.tags }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
