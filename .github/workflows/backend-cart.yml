name: Build - API Cart

on:
  push:
    branches: [ main ]
    paths:
      - 'api-cart/**'
      - '.github/workflows/backend-cart.yml'
    tags:
      - 'v*.*.*'  # Trigger on semantic version tags for releases
  pull_request:
    branches:
      - main  # Validate on PRs without pushing

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven  # Cache Maven dependencies for faster repeated builds

      - name: Build with Maven Wrapper
        run: |
          cd api-cart  # Change to the submodule directory where pom.xml and mvnw reside
          chmod +x ./mvnw  # Make the Maven Wrapper executable
          ./mvnw clean install

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'  # Only login on actual pushes
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  # Use a Docker Hub access token for security

      - name: Set up Docker Buildx  # New step: Enables Buildx for cache support (fixes the driver error)
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ahmentz/tcc-backend  # e.g., ahmentz/tcc-backend
          flavor: |
            prefix=tcc-backend-cart-
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./api-cart  # Use the submodule as build context
          push: ${{ github.event_name != 'pull_request' }}  # Push only on pushes/tags
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max  # Cache Docker layers for efficiency (now supported with Buildx)
